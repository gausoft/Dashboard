var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.356,1,1.881]],["body/controllers/AppController.html",[0,2.046,1,2.839,2,1.581,3,0.374,4,0.317,5,0.317,6,2.899,7,0.875,8,1.679,9,4.399,10,2.194,11,0.037,12,1.177,13,3.512,14,1.297,15,1.851,16,0.644,17,0.564,18,2.515,19,2.899,20,0.374,21,0.066,22,1.753,23,1.953,24,1.431,25,3.512,26,0.028,27,0.028]],["title/modules/AppModule.html",[28,0.544,29,1.881]],["body/modules/AppModule.html",[1,2.712,2,1.681,3,0.28,4,0.237,5,0.237,11,0.037,16,0.755,17,0.422,18,2.588,19,2.171,20,0.28,21,0.049,26,0.023,27,0.023,28,0.675,29,3.645,30,0.881,31,1.521,32,2.171,33,2.171,34,2.171,35,2.884,36,2.884,37,2.884,38,2.884,39,1.863,40,1.312,41,1.312,42,2.63,43,2.077,44,2.653,45,2.63,46,2.63,47,2.63,48,2.63,49,2.63]],["title/injectables/AppService.html",[18,1.503,50,0.751]],["body/injectables/AppService.html",[3,0.399,4,0.338,5,0.338,7,0.933,8,1.748,9,4.504,11,0.037,12,1.254,14,1.382,15,1.928,16,0.53,17,0.601,18,2.362,20,0.399,21,0.07,24,1.524,26,0.029,27,0.029,50,1.18,51,1.685,52,3.089,53,3.743,54,3.743,55,3.743]],["title/modules/AuthModule.html",[28,0.544,35,1.675]],["body/modules/AuthModule.html",[3,0.309,4,0.261,5,0.261,11,0.037,16,0.733,17,0.465,20,0.309,21,0.054,26,0.025,27,0.025,28,0.722,30,0.971,31,1.628,35,3.249,39,1.994,40,1.445,41,1.445,43,2.222,44,2.058,56,2.391,57,2.391,58,2.669,59,2.974,60,2.179,61,2.179,62,2.897,63,2.391,64,2.391,65,2.058,66,2.897]],["title/injectables/AuthService.html",[50,0.751,58,1.503]],["body/injectables/AuthService.html",[3,0.242,4,0.205,5,0.205,7,0.566,8,1.239,11,0.037,12,1.338,14,1.239,15,2.178,16,0.625,17,0.364,20,0.242,21,0.043,22,1.132,23,1.262,24,1.367,26,0.021,27,0.021,50,0.836,51,1.021,58,1.674,61,2.008,64,1.873,67,1.873,68,3.079,69,3.355,70,3.355,71,1.262,72,2.269,73,2.269,74,1.797,75,1.797,76,1.475,77,1.797,78,3.355,79,2.269,80,1.866,81,2.756,82,3.355,83,3.345,84,2.269,85,1.417,86,2.201,87,2.269,88,2.77,89,2.384,90,2.77,91,2.77,92,2.269,93,2.77,94,1.866,95,2.269,96,2.269,97,2.269,98,2.269,99,1.873,100,2.269,101,2.269,102,3.355]],["title/injectables/BasicStrategy.html",[50,0.751,59,1.675]],["body/injectables/BasicStrategy.html",[3,0.276,4,0.233,5,0.233,7,0.645,8,1.363,11,0.037,12,1.237,14,0.955,16,0.664,17,0.415,20,0.276,21,0.049,22,1.291,23,1.438,24,1.503,26,0.023,27,0.023,50,0.92,51,1.164,58,2.574,59,2.393,63,2.135,68,2.688,71,1.438,74,1.661,75,1.661,76,1.363,77,1.661,80,2.393,81,2.305,83,3.334,85,1.616,103,2.135,104,4.303,105,2.587,106,2.587,107,2.587,108,3.552,109,4.303,110,4.303,111,2.587,112,3.046,113,2.587,114,2.135,115,2.135,116,2.587,117,1.838,118,1.838,119,2.587,120,2.135,121,2.587,122,3.691,123,2.587,124,2.587,125,3.691,126,2.587]],["title/classes/CreateServiceDto.html",[21,0.057,127,1.503]],["body/classes/CreateServiceDto.html",[3,0.465,4,0.394,5,0.394,11,0.034,20,0.465,21,0.082,26,0.032,27,0.032,127,2.597,128,2.429,129,3.605,130,3.103]],["title/modules/IntranetModule.html",[28,0.544,131,1.675]],["body/modules/IntranetModule.html",[3,0.45,4,0.381,5,0.381,11,0.036,16,0.598,17,0.678,20,0.45,21,0.079,26,0.031,27,0.031,28,0.921,30,1.414,131,2.835,132,4.221]],["title/modules/PrismaModule.html",[28,0.544,36,1.675]],["body/modules/PrismaModule.html",[3,0.36,4,0.305,5,0.305,11,0.036,16,0.628,17,0.543,20,0.36,21,0.064,26,0.027,27,0.027,28,0.801,30,1.133,31,1.806,36,3.171,39,2.212,40,1.687,41,1.687,43,2.465,60,2.439,133,2.79,134,3.38,135,2.79,136,3.38,137,4.433,138,3.38]],["title/injectables/PrismaService.html",[50,0.751,60,1.227]],["body/injectables/PrismaService.html",[3,0.327,4,0.277,5,0.277,7,0.764,8,1.534,11,0.037,12,1.579,14,1.534,16,0.588,17,0.492,20,0.327,21,0.058,26,0.026,27,0.026,50,1.036,51,1.38,60,1.692,68,3.399,71,2.62,89,2.952,118,2.952,120,2.531,139,2.531,140,4.712,141,5.441,142,5.441,143,3.066,144,3.066,145,3.066,146,2.531,147,2.531,148,3.066,149,3.066,150,3.066]],["title/classes/Service.html",[21,0.057,151,1.881]],["body/classes/Service.html",[3,0.469,4,0.397,5,0.397,11,0.034,20,0.469,21,0.083,26,0.032,27,0.032,128,2.446,151,3.264,152,3.63]],["title/controllers/ServicesController.html",[0,1.356,153,1.881]],["body/controllers/ServicesController.html",[0,0.918,2,0.918,3,0.217,4,0.184,5,0.184,7,0.509,8,1.144,10,2.81,11,0.037,12,1.508,14,1.662,15,2.116,16,0.592,17,0.328,20,0.217,21,0.038,22,1.018,23,1.135,24,1.833,26,0.019,27,0.019,74,1.883,75,1.883,76,1.545,77,1.883,127,2.364,153,1.936,154,1.684,155,1.684,156,1.684,157,1.723,158,2.973,159,2.558,160,1.936,161,1.936,162,1.684,163,3.093,164,2.04,165,2.04,166,1.684,167,2.558,168,2.04,169,2.634,170,1.274,171,2.558,172,2.04,173,1.274,174,2.82,175,2.558,176,2.04,177,2.558,178,1.684,179,1.684,180,1.684,181,1.869,182,1.684,183,1.684,184,2.202,185,1.684,186,2.04,187,1.684,188,2.04,189,2.04,190,2.04,191,2.04,192,1.684,193,2.04,194,1.684,195,2.04]],["title/modules/ServicesModule.html",[28,0.544,37,1.675]],["body/modules/ServicesModule.html",[2,1.822,3,0.314,4,0.266,5,0.266,11,0.037,16,0.737,17,0.474,20,0.314,21,0.056,26,0.025,27,0.025,28,0.731,30,0.989,31,1.649,37,3.202,39,2.02,40,1.473,41,1.473,43,2.251,44,2.876,131,2.991,153,2.885,181,2.684,182,2.436,196,2.436,197,2.436,198,2.436,199,2.991,200,2.951,201,2.951,202,2.951,203,2.951]],["title/injectables/ServicesService.html",[50,0.751,181,1.503]],["body/injectables/ServicesService.html",[3,0.234,4,0.198,5,0.198,7,0.548,8,1.21,11,0.037,12,1.557,14,1.864,15,1.892,16,0.555,17,0.353,20,0.234,21,0.041,24,1.892,26,0.02,27,0.02,50,0.817,51,0.989,74,1.955,75,1.955,76,1.604,77,1.955,94,1.222,127,2.318,151,2.713,156,1.814,157,1.822,158,3.086,159,2.705,160,2.047,161,2.047,162,2.705,166,2.705,169,2.709,170,2.047,173,2.047,174,2.807,181,1.635,183,1.814,184,2.328,185,1.814,204,1.814,205,2.197,206,2.197,207,3.312,208,2.197,209,2.197,210,2.197,211,4.645,212,2.197,213,2.197,214,2.197]],["title/classes/UpdateServiceDto.html",[21,0.057,174,1.675]],["body/classes/UpdateServiceDto.html",[3,0.424,4,0.359,5,0.359,11,0.036,16,0.697,20,0.424,21,0.075,26,0.03,27,0.03,118,2.828,127,1.986,128,2.213,130,2.828,157,2.213,174,2.735,184,2.828,215,3.285,216,3.98,217,3.285,218,3.285,219,3.98]],["title/classes/User.html",[21,0.057,86,1.503]],["body/classes/User.html",[3,0.314,4,0.266,5,0.266,7,0.736,10,1.843,11,0.037,12,1.745,15,2.025,16,0.418,20,0.314,21,0.076,26,0.025,27,0.025,71,1.641,74,1.328,75,1.328,76,1.923,77,2.079,80,2.569,83,3.282,86,2.02,128,1.641,169,2.569,207,2.528,220,2.436,221,4.047,222,4.619,223,4.047,224,5.208,225,4.047,226,4.047,227,2.951,228,2.951,229,4.619,230,2.951,231,2.436,232,2.951]],["title/controllers/UsersController.html",[0,1.356,233,1.881]],["body/controllers/UsersController.html",[0,0.775,2,0.775,3,0.183,4,0.155,5,0.155,7,0.429,8,1.003,10,2.761,11,0.037,12,1.481,14,1.632,15,2.011,16,0.541,17,0.276,20,0.183,21,0.032,22,0.859,23,0.957,24,1.885,26,0.017,27,0.017,61,1.371,74,1.872,75,1.872,76,1.536,77,1.872,80,1.511,81,1.697,85,1.075,86,2.654,90,1.421,94,0.957,108,3.154,112,3.433,117,1.223,155,1.421,157,1.511,158,2.715,160,1.697,161,1.697,163,2.778,167,2.243,169,2.458,170,1.075,171,1.421,173,1.075,175,1.421,177,2.243,178,1.421,179,1.421,180,1.421,187,1.421,192,1.421,194,1.421,207,2.102,233,1.697,234,1.421,235,1.721,236,2.717,237,2.717,238,1.721,239,1.721,240,1.721,241,1.721,242,1.721,243,1.721,244,1.721,245,1.721,246,1.721,247,1.721,248,1.721,249,1.721,250,1.721,251,1.421,252,1.421,253,1.721,254,1.421,255,1.421,256,1.721,257,1.721,258,1.721,259,1.721,260,1.721,261,1.721,262,1.721,263,3.821,264,1.721,265,1.721,266,1.721,267,1.721,268,1.721,269,1.721,270,1.721,271,1.721]],["title/modules/UsersModule.html",[28,0.544,38,1.675]],["body/modules/UsersModule.html",[2,1.921,3,0.34,4,0.288,5,0.288,11,0.037,16,0.727,17,0.512,20,0.34,21,0.06,26,0.026,27,0.026,28,0.771,30,1.069,31,1.738,38,3.176,39,2.129,40,1.592,41,1.592,43,2.373,60,2.242,61,2.242,65,2.267,233,3.003,254,2.634,272,3.191,273,3.191,274,3.191,275,3.191]],["title/injectables/UsersService.html",[50,0.751,61,1.227]],["body/injectables/UsersService.html",[3,0.157,4,0.133,5,0.133,7,0.368,8,0.886,11,0.038,12,1.457,14,1.523,15,1.236,16,0.495,17,0.237,20,0.157,21,0.028,22,0.736,24,1.68,26,0.015,27,0.015,50,0.598,51,0.664,60,1.424,61,0.978,65,1.048,68,3.388,71,0.82,74,1.857,75,1.857,76,1.523,77,1.857,80,1.687,81,2.831,85,0.921,86,2.552,88,1.981,89,3.089,91,1.217,93,3.177,94,2.14,99,1.217,146,1.981,157,1.335,160,1.499,161,1.499,169,2.844,170,1.499,173,1.499,207,2.927,251,1.217,252,1.217,255,1.217,276,1.217,277,2.4,278,2.4,279,3.497,280,1.475,281,1.475,282,2.4,283,1.475,284,3.034,285,2.4,286,1.475,287,2.4,288,1.475,289,1.475,290,1.475,291,2.4,292,1.475,293,1.475,294,2.4,295,1.475,296,1.475,297,1.475,298,2.4,299,3.497,300,1.475,301,1.475,302,2.4,303,3.497,304,3.497,305,3.497,306,1.475,307,1.475,308,1.475]],["title/modules/WeatherModule.html",[28,0.544,199,1.675]],["body/modules/WeatherModule.html",[3,0.45,4,0.381,5,0.381,11,0.036,16,0.598,17,0.678,20,0.45,21,0.079,26,0.031,27,0.031,28,0.921,30,1.414,199,2.835,309,4.221]],["title/coverage.html",[310,2.916]],["body/coverage.html",[0,1.977,1,1.678,5,0.242,6,2.217,11,0.037,18,1.34,21,0.09,26,0.023,27,0.023,28,0.485,50,1.302,52,2.217,58,1.34,59,1.494,60,1.094,61,1.094,67,2.217,76,0.992,86,1.34,94,1.494,103,2.217,127,1.34,129,2.217,130,2.693,139,2.217,151,1.678,152,2.217,153,1.678,154,2.217,174,1.494,181,1.34,204,2.217,215,2.217,220,2.217,233,1.678,234,2.217,276,2.217,310,1.908,311,2.686,312,2.686,313,2.686,314,5.89,315,3.791,316,3.791,317,2.686,318,2.693,319,2.686,320,2.217,321,5.033,322,2.686,323,4.393,324,2.686,325,2.686,326,2.686,327,2.686]],["title/dependencies.html",[31,1.475,328,2.518]],["body/dependencies.html",[11,0.038,17,0.577,21,0.068,26,0.028,27,0.028,31,1.463,114,3.807,115,2.966,117,2.553,147,2.966,217,2.966,218,2.966,231,2.966,329,5.094,330,3.593,331,3.593,332,3.593,333,3.593,334,3.593,335,3.593,336,3.593,337,3.593,338,3.593,339,3.593,340,3.593,341,3.593,342,3.593,343,3.593,344,3.593]],["title/miscellaneous/functions.html",[345,1.573,346,2.989]],["body/miscellaneous/functions.html",[7,1.112,11,0.032,26,0.032,27,0.032,318,3.169,320,4.63,345,2.786,346,3.682,347,3.682]],["title/index.html",[7,0.628,348,2.518,349,2.518]],["body/index.html",[4,0.252,11,0.036,26,0.024,27,0.024,310,1.985,350,2.794,351,2.794,352,3.897,353,2.794,354,2.794,355,2.794,356,2.794,357,2.794,358,2.794,359,2.794,360,4.487,361,2.794,362,2.794,363,2.794,364,2.794,365,5.427,366,2.794,367,2.794,368,2.794,369,5.289,370,2.794,371,2.794,372,3.897,373,2.794,374,2.794,375,2.794,376,2.794,377,3.897,378,3.897,379,2.794,380,2.794,381,2.794,382,3.897,383,3.897,384,2.794,385,2.794,386,2.794,387,2.794,388,2.794,389,2.306,390,2.794,391,2.794,392,2.794,393,2.794,394,2.794,395,2.794,396,2.794,397,2.794,398,2.794,399,2.794,400,2.794,401,2.794,402,2.794,403,2.794,404,2.794,405,2.794,406,2.794,407,2.794]],["title/modules.html",[30,1.375]],["body/modules.html",[11,0.029,26,0.029,27,0.029,29,2.352,30,1.262,35,2.094,36,2.094,37,2.094,38,2.094,131,2.094,199,2.094,389,4.654,408,5.638,409,5.638,410,5.846,411,4.752,412,4.752]],["title/overview.html",[413,3.388]],["body/overview.html",[2,1.132,11,0.036,18,2.113,26,0.022,27,0.022,29,3.559,30,0.843,31,1.473,32,2.075,33,2.075,34,2.075,35,3.135,36,2.841,37,3.051,38,2.928,39,1.804,40,1.254,41,1.254,51,1.132,56,2.075,57,2.075,58,2.113,59,2.355,60,2.235,61,1.886,128,1.398,131,2.355,133,2.075,135,2.075,181,2.113,196,2.075,197,2.075,198,2.075,199,2.355,413,2.075,414,2.514,415,2.514,416,2.514,417,2.514]],["title/miscellaneous/variables.html",[345,1.573,418,2.989]],["body/miscellaneous/variables.html",[7,1.104,11,0.034,26,0.032,27,0.032,28,0.948,76,1.636,318,3.147,345,2.766,347,3.656,418,3.656]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BasicStrategy.html":{},"classes/CreateServiceDto.html":{},"modules/IntranetModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Service.html":{},"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"classes/UpdateServiceDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"modules/WeatherModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":314,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":340,"title":{},"body":{"dependencies.html":{}}}],["0.3.0",{"_index":337,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":336,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":335,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":321,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":315,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":317,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":316,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":323,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":324,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":325,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":415,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":342,"title":{},"body":{"dependencies.html":{}}}],["3.6.0",{"_index":334,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":417,"title":{},"body":{"overview.html":{}}}],["6",{"_index":416,"title":{},"body":{"overview.html":{}}}],["7",{"_index":414,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":344,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":329,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":331,"title":{},"body":{"dependencies.html":{}}}],["action",{"_index":211,"title":{},"body":{"injectables/ServicesService.html":{}}}],["adds",{"_index":212,"title":{},"body":{"injectables/ServicesService.html":{}}}],["amazing",{"_index":390,"title":{},"body":{"index.html":{}}}],["app",{"_index":367,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":358,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":68,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BasicStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}}}],["auth.service",{"_index":63,"title":{},"body":{"modules/AuthModule.html":{},"injectables/BasicStrategy.html":{}}}],["auth.strategy",{"_index":66,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["authguard",{"_index":256,"title":{},"body":{"controllers/UsersController.html":{}}}],["authmodule",{"_index":35,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":400,"title":{},"body":{"index.html":{}}}],["authservice",{"_index":58,"title":{"injectables/AuthService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BasicStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":412,"title":{},"body":{"modules.html":{}}}],["await",{"_index":89,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}}}],["backers",{"_index":391,"title":{},"body":{"index.html":{}}}],["basicstrategy",{"_index":59,"title":{"injectables/BasicStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/BasicStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["bcrypt",{"_index":88,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["bcrypt.comparesync(password",{"_index":98,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.gensalt",{"_index":295,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcrypt.hash(user.password",{"_index":296,"title":{},"body":{"injectables/UsersService.html":{}}}],["body",{"_index":177,"title":{},"body":{"controllers/ServicesController.html":{},"controllers/UsersController.html":{}}}],["bootstrap",{"_index":320,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":410,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":408,"title":{},"body":{"modules.html":{}}}],["building",{"_index":353,"title":{},"body":{"index.html":{}}}],["catch",{"_index":260,"title":{},"body":{"controllers/UsersController.html":{}}}],["catch((e",{"_index":299,"title":{},"body":{"injectables/UsersService.html":{}}}],["class",{"_index":21,"title":{"classes/CreateServiceDto.html":{},"classes/Service.html":{},"classes/UpdateServiceDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BasicStrategy.html":{},"classes/CreateServiceDto.html":{},"modules/IntranetModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Service.html":{},"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"classes/UpdateServiceDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"modules/WeatherModule.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":128,"title":{},"body":{"classes/CreateServiceDto.html":{},"classes/Service.html":{},"classes/UpdateServiceDto.html":{},"classes/User.html":{},"overview.html":{}}}],["classserializerinterceptor",{"_index":251,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["cluster_appmodule",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":56,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":57,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":133,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":135,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":134,"title":{},"body":{"modules/PrismaModule.html":{}}}],["cluster_servicesmodule",{"_index":196,"title":{},"body":{"modules/ServicesModule.html":{},"overview.html":{}}}],["cluster_servicesmodule_imports",{"_index":198,"title":{},"body":{"modules/ServicesModule.html":{},"overview.html":{}}}],["cluster_servicesmodule_providers",{"_index":197,"title":{},"body":{"modules/ServicesModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":272,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":273,"title":{},"body":{"modules/UsersModule.html":{}}}],["console.log(res",{"_index":125,"title":{},"body":{"injectables/BasicStrategy.html":{}}}],["console.log(user",{"_index":92,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":91,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["constructor",{"_index":71,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BasicStrategy.html":{},"injectables/PrismaService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":105,"title":{},"body":{"injectables/BasicStrategy.html":{}}}],["constructor(partial",{"_index":223,"title":{},"body":{"classes/User.html":{}}}],["constructor(prisma",{"_index":280,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/BasicStrategy.html":{},"controllers/ServicesController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":72,"title":{},"body":{"injectables/AuthService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/ServicesController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/ServicesController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('services",{"_index":186,"title":{},"body":{"controllers/ServicesController.html":{}}}],["controller('users",{"_index":257,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":310,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":157,"title":{},"body":{"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"classes/UpdateServiceDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(@body",{"_index":187,"title":{},"body":{"controllers/ServicesController.html":{},"controllers/UsersController.html":{}}}],["create(createservicedto",{"_index":162,"title":{},"body":{"controllers/ServicesController.html":{},"injectables/ServicesService.html":{}}}],["create(createuserdto",{"_index":282,"title":{},"body":{"injectables/UsersService.html":{}}}],["create(user",{"_index":238,"title":{},"body":{"controllers/UsersController.html":{}}}],["created_at",{"_index":222,"title":{},"body":{"classes/User.html":{}}}],["createservicedto",{"_index":127,"title":{"classes/CreateServiceDto.html":{}},"body":{"classes/CreateServiceDto.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"classes/UpdateServiceDto.html":{},"coverage.html":{}}}],["createuserdto",{"_index":284,"title":{},"body":{"injectables/UsersService.html":{}}}],["data",{"_index":298,"title":{},"body":{"injectables/UsersService.html":{}}}],["date",{"_index":226,"title":{},"body":{"classes/User.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/ServicesController.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BasicStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":180,"title":{},"body":{"controllers/ServicesController.html":{},"controllers/UsersController.html":{}}}],["delete(':id",{"_index":171,"title":{},"body":{"controllers/ServicesController.html":{},"controllers/UsersController.html":{}}}],["delete(':id')@useguards(undefined",{"_index":247,"title":{},"body":{"controllers/UsersController.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ServicesModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":359,"title":{},"body":{"index.html":{}}}],["development",{"_index":368,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":311,"title":{},"body":{"coverage.html":{}}}],["does'nt",{"_index":304,"title":{},"body":{"injectables/UsersService.html":{}}}],["does\\'nt",{"_index":96,"title":{},"body":{"injectables/AuthService.html":{}}}],["dto/create",{"_index":183,"title":{},"body":{"controllers/ServicesController.html":{},"injectables/ServicesService.html":{}}}],["dto/update",{"_index":185,"title":{},"body":{"controllers/ServicesController.html":{},"injectables/ServicesService.html":{}}}],["e2e",{"_index":379,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":354,"title":{},"body":{"index.html":{}}}],["entities/user.entity",{"_index":255,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["error",{"_index":261,"title":{},"body":{"controllers/UsersController.html":{}}}],["exclude",{"_index":229,"title":{},"body":{"classes/User.html":{}}}],["excludedprop",{"_index":101,"title":{},"body":{"injectables/AuthService.html":{}}}],["exist",{"_index":305,"title":{},"body":{"injectables/UsersService.html":{}}}],["exists",{"_index":97,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BasicStrategy.html":{},"classes/CreateServiceDto.html":{},"modules/IntranetModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Service.html":{},"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"classes/UpdateServiceDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"modules/WeatherModule.html":{}}}],["exports",{"_index":137,"title":{},"body":{"modules/PrismaModule.html":{}}}],["express",{"_index":333,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":118,"title":{},"body":{"injectables/BasicStrategy.html":{},"injectables/PrismaService.html":{},"classes/UpdateServiceDto.html":{}}}],["false",{"_index":126,"title":{},"body":{"injectables/BasicStrategy.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BasicStrategy.html":{},"classes/CreateServiceDto.html":{},"modules/IntranetModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Service.html":{},"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"classes/UpdateServiceDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"modules/WeatherModule.html":{},"coverage.html":{}}}],["findall",{"_index":158,"title":{},"body":{"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"controllers/UsersController.html":{}}}],["findbyid",{"_index":236,"title":{},"body":{"controllers/UsersController.html":{}}}],["findbyid(@param('id",{"_index":265,"title":{},"body":{"controllers/UsersController.html":{}}}],["findbyid(id",{"_index":242,"title":{},"body":{"controllers/UsersController.html":{}}}],["findbyusername",{"_index":237,"title":{},"body":{"controllers/UsersController.html":{}}}],["findbyusername(@param('username",{"_index":269,"title":{},"body":{"controllers/UsersController.html":{}}}],["findbyusername(username",{"_index":244,"title":{},"body":{"controllers/UsersController.html":{}}}],["findone",{"_index":159,"title":{},"body":{"controllers/ServicesController.html":{},"injectables/ServicesService.html":{}}}],["findone(@param('id",{"_index":190,"title":{},"body":{"controllers/ServicesController.html":{}}}],["findone(id",{"_index":166,"title":{},"body":{"controllers/ServicesController.html":{},"injectables/ServicesService.html":{}}}],["finduser",{"_index":277,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduser(id",{"_index":285,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbyusername",{"_index":278,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbyusername(username",{"_index":287,"title":{},"body":{"injectables/UsersService.html":{}}}],["findusers",{"_index":279,"title":{},"body":{"injectables/UsersService.html":{}}}],["framework",{"_index":352,"title":{},"body":{"index.html":{}}}],["function",{"_index":319,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":346,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/username/:username",{"_index":268,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/username/:username')@useguards(undefined",{"_index":245,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(':id",{"_index":167,"title":{},"body":{"controllers/ServicesController.html":{},"controllers/UsersController.html":{}}}],["get()@useguards(undefined",{"_index":240,"title":{},"body":{"controllers/UsersController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":348,"title":{"index.html":{}},"body":{}}],["graph",{"_index":411,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":386,"title":{},"body":{"index.html":{}}}],["hello",{"_index":54,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":397,"title":{},"body":{"index.html":{}}}],["http",{"_index":115,"title":{},"body":{"injectables/BasicStrategy.html":{},"dependencies.html":{}}}],["https://nestjs.com",{"_index":404,"title":{},"body":{"index.html":{}}}],["id",{"_index":169,"title":{},"body":{"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":312,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":148,"title":{},"body":{"injectables/PrismaService.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BasicStrategy.html":{},"modules/IntranetModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"classes/UpdateServiceDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"modules/WeatherModule.html":{}}}],["imports",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ServicesModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BasicStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BasicStrategy.html":{},"classes/CreateServiceDto.html":{},"modules/IntranetModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Service.html":{},"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"classes/UpdateServiceDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"modules/WeatherModule.html":{}}}],["injectable",{"_index":50,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BasicStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BasicStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":51,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BasicStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["installation",{"_index":364,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":366,"title":{},"body":{"index.html":{}}}],["intranet/intranet.module",{"_index":202,"title":{},"body":{"modules/ServicesModule.html":{}}}],["intranetmodule",{"_index":131,"title":{"modules/IntranetModule.html":{}},"body":{"modules/IntranetModule.html":{},"modules/ServicesModule.html":{},"modules.html":{},"overview.html":{}}}],["join",{"_index":393,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":401,"title":{},"body":{"index.html":{}}}],["license",{"_index":407,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":383,"title":{},"body":{"index.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BasicStrategy.html":{},"classes/CreateServiceDto.html":{},"modules/IntranetModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Service.html":{},"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"classes/UpdateServiceDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"modules/WeatherModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":339,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BasicStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":345,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":382,"title":{},"body":{"index.html":{}}}],["mode",{"_index":372,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/IntranetModule.html":{},"modules/PrismaModule.html":{},"modules/ServicesModule.html":{},"modules/UsersModule.html":{},"modules/WeatherModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/IntranetModule.html":{},"modules/PrismaModule.html":{},"modules/ServicesModule.html":{},"modules/UsersModule.html":{},"modules/WeatherModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/IntranetModule.html":{},"modules/PrismaModule.html":{},"modules/ServicesModule.html":{},"modules/UsersModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":396,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":402,"title":{},"body":{"index.html":{}}}],["name",{"_index":75,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BasicStrategy.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["nest",{"_index":360,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":406,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BasicStrategy.html":{},"modules/IntranetModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"modules/WeatherModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":330,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":217,"title":{},"body":{"classes/UpdateServiceDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":117,"title":{},"body":{"injectables/BasicStrategy.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":332,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":94,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ServicesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["node.js",{"_index":351,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":293,"title":{},"body":{"injectables/UsersService.html":{}}}],["notfoundexception(\"user",{"_index":303,"title":{},"body":{"injectables/UsersService.html":{}}}],["npm",{"_index":365,"title":{},"body":{"index.html":{}}}],["number",{"_index":207,"title":{},"body":{"injectables/ServicesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["object.assign(this",{"_index":232,"title":{},"body":{"classes/User.html":{}}}],["onmoduledestroy",{"_index":141,"title":{},"body":{"injectables/PrismaService.html":{}}}],["onmoduleinit",{"_index":142,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":384,"title":{},"body":{"index.html":{}}}],["optional",{"_index":77,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BasicStrategy.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["out",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ServicesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":413,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":328,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":179,"title":{},"body":{"controllers/ServicesController.html":{},"controllers/UsersController.html":{}}}],["parameters",{"_index":74,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BasicStrategy.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["partial",{"_index":224,"title":{},"body":{"classes/User.html":{}}}],["partialtype",{"_index":216,"title":{},"body":{"classes/UpdateServiceDto.html":{}}}],["partialtype(createservicedto",{"_index":219,"title":{},"body":{"classes/UpdateServiceDto.html":{}}}],["passport",{"_index":114,"title":{},"body":{"injectables/BasicStrategy.html":{},"dependencies.html":{}}}],["passportstrategy",{"_index":116,"title":{},"body":{"injectables/BasicStrategy.html":{}}}],["passportstrategy(strategy",{"_index":119,"title":{},"body":{"injectables/BasicStrategy.html":{}}}],["passreqtocallback",{"_index":121,"title":{},"body":{"injectables/BasicStrategy.html":{}}}],["password",{"_index":83,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BasicStrategy.html":{},"classes/User.html":{}}}],["patch",{"_index":178,"title":{},"body":{"controllers/ServicesController.html":{},"controllers/UsersController.html":{}}}],["patch(':id",{"_index":175,"title":{},"body":{"controllers/ServicesController.html":{},"controllers/UsersController.html":{}}}],["patch(':id')@useguards(undefined",{"_index":249,"title":{},"body":{"controllers/UsersController.html":{}}}],["please",{"_index":394,"title":{},"body":{"index.html":{}}}],["post",{"_index":163,"title":{},"body":{"controllers/ServicesController.html":{},"controllers/UsersController.html":{}}}],["prefix",{"_index":155,"title":{},"body":{"controllers/ServicesController.html":{},"controllers/UsersController.html":{}}}],["prisma",{"_index":146,"title":{},"body":{"injectables/PrismaService.html":{},"injectables/UsersService.html":{}}}],["prisma.service",{"_index":138,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":147,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["prisma/prisma.service",{"_index":65,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["prismaclient",{"_index":140,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":36,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":60,"title":{"injectables/PrismaService.html":{}},"body":{"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["production",{"_index":374,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":350,"title":{},"body":{"index.html":{}}}],["project",{"_index":385,"title":{},"body":{"index.html":{}}}],["promise",{"_index":81,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BasicStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":221,"title":{},"body":{"classes/User.html":{}}}],["providers",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ServicesModule.html":{},"modules/UsersModule.html":{}}}],["read",{"_index":395,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/BasicStrategy.html":{},"controllers/ServicesController.html":{},"controllers/UsersController.html":{}}}],["reflect",{"_index":338,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":160,"title":{},"body":{"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":194,"title":{},"body":{"controllers/ServicesController.html":{},"controllers/UsersController.html":{}}}],["remove(id",{"_index":170,"title":{},"body":{"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["removes",{"_index":214,"title":{},"body":{"injectables/ServicesService.html":{}}}],["repository",{"_index":363,"title":{},"body":{"index.html":{}}}],["req",{"_index":112,"title":{},"body":{"injectables/BasicStrategy.html":{},"controllers/UsersController.html":{}}}],["request",{"_index":108,"title":{},"body":{"injectables/BasicStrategy.html":{},"controllers/UsersController.html":{}}}],["res",{"_index":109,"title":{},"body":{"injectables/BasicStrategy.html":{}}}],["reset",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ServicesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":110,"title":{},"body":{"injectables/BasicStrategy.html":{}}}],["result",{"_index":102,"title":{},"body":{"injectables/AuthService.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BasicStrategy.html":{},"classes/CreateServiceDto.html":{},"modules/IntranetModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Service.html":{},"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"classes/UpdateServiceDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"modules/WeatherModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BasicStrategy.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BasicStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["rimraf",{"_index":341,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":369,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":343,"title":{},"body":{"dependencies.html":{}}}],["salt",{"_index":294,"title":{},"body":{"injectables/UsersService.html":{}}}],["scalable",{"_index":355,"title":{},"body":{"index.html":{}}}],["server",{"_index":356,"title":{},"body":{"index.html":{}}}],["service",{"_index":151,"title":{"classes/Service.html":{}},"body":{"classes/Service.html":{},"injectables/ServicesService.html":{},"coverage.html":{}}}],["service.dto",{"_index":184,"title":{},"body":{"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"classes/UpdateServiceDto.html":{}}}],["service.dto.ts",{"_index":130,"title":{},"body":{"classes/CreateServiceDto.html":{},"classes/UpdateServiceDto.html":{},"coverage.html":{}}}],["services",{"_index":156,"title":{},"body":{"controllers/ServicesController.html":{},"injectables/ServicesService.html":{}}}],["services.controller",{"_index":201,"title":{},"body":{"modules/ServicesModule.html":{}}}],["services.service",{"_index":182,"title":{},"body":{"controllers/ServicesController.html":{},"modules/ServicesModule.html":{}}}],["services/services.module",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["servicescontroller",{"_index":153,"title":{"controllers/ServicesController.html":{}},"body":{"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"coverage.html":{}}}],["servicesmodule",{"_index":37,"title":{"modules/ServicesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ServicesModule.html":{},"modules.html":{},"overview.html":{}}}],["servicesservice",{"_index":181,"title":{"injectables/ServicesService.html":{}},"body":{"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"coverage.html":{},"overview.html":{}}}],["side",{"_index":357,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BasicStrategy.html":{},"classes/CreateServiceDto.html":{},"modules/IntranetModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Service.html":{},"controllers/ServicesController.html":{},"modules/ServicesModule.html":{},"injectables/ServicesService.html":{},"classes/UpdateServiceDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"modules/WeatherModule.html":{},"index.html":{}}}],["sponsors",{"_index":388,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":347,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":52,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":53,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.module.ts",{"_index":62,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":67,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:10",{"_index":79,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:14",{"_index":84,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:6",{"_index":73,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.strategy.ts",{"_index":103,"title":{},"body":{"injectables/BasicStrategy.html":{},"coverage.html":{}}}],["src/auth/auth.strategy.ts:14",{"_index":111,"title":{},"body":{"injectables/BasicStrategy.html":{}}}],["src/auth/auth.strategy.ts:7",{"_index":106,"title":{},"body":{"injectables/BasicStrategy.html":{}}}],["src/main.ts",{"_index":318,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/prisma/prisma.module.ts",{"_index":136,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service.ts",{"_index":139,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:10",{"_index":145,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:14",{"_index":144,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:5",{"_index":143,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/services/dto/create",{"_index":129,"title":{},"body":{"classes/CreateServiceDto.html":{},"coverage.html":{}}}],["src/services/dto/update",{"_index":215,"title":{},"body":{"classes/UpdateServiceDto.html":{},"coverage.html":{}}}],["src/services/entities/service.entity.ts",{"_index":152,"title":{},"body":{"classes/Service.html":{},"coverage.html":{}}}],["src/services/intranet/intranet.module.ts",{"_index":132,"title":{},"body":{"modules/IntranetModule.html":{}}}],["src/services/services.controller.ts",{"_index":154,"title":{},"body":{"controllers/ServicesController.html":{},"coverage.html":{}}}],["src/services/services.controller.ts:11",{"_index":164,"title":{},"body":{"controllers/ServicesController.html":{}}}],["src/services/services.controller.ts:16",{"_index":165,"title":{},"body":{"controllers/ServicesController.html":{}}}],["src/services/services.controller.ts:21",{"_index":168,"title":{},"body":{"controllers/ServicesController.html":{}}}],["src/services/services.controller.ts:26",{"_index":176,"title":{},"body":{"controllers/ServicesController.html":{}}}],["src/services/services.controller.ts:31",{"_index":172,"title":{},"body":{"controllers/ServicesController.html":{}}}],["src/services/services.module.ts",{"_index":200,"title":{},"body":{"modules/ServicesModule.html":{}}}],["src/services/services.service.ts",{"_index":204,"title":{},"body":{"injectables/ServicesService.html":{},"coverage.html":{}}}],["src/services/services.service.ts:11",{"_index":206,"title":{},"body":{"injectables/ServicesService.html":{}}}],["src/services/services.service.ts:15",{"_index":208,"title":{},"body":{"injectables/ServicesService.html":{}}}],["src/services/services.service.ts:19",{"_index":210,"title":{},"body":{"injectables/ServicesService.html":{}}}],["src/services/services.service.ts:23",{"_index":209,"title":{},"body":{"injectables/ServicesService.html":{}}}],["src/services/services.service.ts:7",{"_index":205,"title":{},"body":{"injectables/ServicesService.html":{}}}],["src/services/weather/weather.module.ts",{"_index":309,"title":{},"body":{"modules/WeatherModule.html":{}}}],["src/users/entities/user.entity.ts",{"_index":220,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts:4",{"_index":228,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:5",{"_index":230,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:6",{"_index":227,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:9",{"_index":225,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.controller.ts",{"_index":234,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:11",{"_index":239,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:23",{"_index":241,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:28",{"_index":243,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:34",{"_index":246,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:40",{"_index":250,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:47",{"_index":248,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":274,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":276,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:11",{"_index":283,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:19",{"_index":289,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:24",{"_index":286,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:35",{"_index":288,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:44",{"_index":292,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:54",{"_index":290,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:7",{"_index":281,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":370,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":373,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":375,"title":{},"body":{"index.html":{}}}],["started",{"_index":349,"title":{"index.html":{}},"body":{}}],["starter",{"_index":362,"title":{},"body":{"index.html":{}}}],["statements",{"_index":313,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":398,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":113,"title":{},"body":{"injectables/BasicStrategy.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["super",{"_index":120,"title":{},"body":{"injectables/BasicStrategy.html":{},"injectables/PrismaService.html":{}}}],["support",{"_index":389,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":409,"title":{},"body":{"modules.html":{}}}],["table",{"_index":327,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":326,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":378,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":381,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":380,"title":{},"body":{"index.html":{}}}],["tests",{"_index":377,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":387,"title":{},"body":{"index.html":{}}}],["then((e",{"_index":306,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.$connect",{"_index":149,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$disconnect",{"_index":150,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.userexists",{"_index":123,"title":{},"body":{"injectables/BasicStrategy.html":{}}}],["this.authservice.validateuser(username",{"_index":124,"title":{},"body":{"injectables/BasicStrategy.html":{}}}],["this.prisma.user.create",{"_index":297,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.delete",{"_index":308,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.findmany",{"_index":301,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.findunique",{"_index":302,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.update",{"_index":307,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.servicesservice.create(createservicedto",{"_index":188,"title":{},"body":{"controllers/ServicesController.html":{}}}],["this.servicesservice.findall",{"_index":189,"title":{},"body":{"controllers/ServicesController.html":{}}}],["this.servicesservice.findone(+id",{"_index":191,"title":{},"body":{"controllers/ServicesController.html":{}}}],["this.servicesservice.remove(+id",{"_index":195,"title":{},"body":{"controllers/ServicesController.html":{}}}],["this.servicesservice.update(+id",{"_index":193,"title":{},"body":{"controllers/ServicesController.html":{}}}],["this.usersservice.create(user",{"_index":259,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.finduser(+id",{"_index":267,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.finduserbyusername(username",{"_index":90,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["this.usersservice.findusers",{"_index":264,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.remove(+id",{"_index":271,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(+id",{"_index":270,"title":{},"body":{"controllers/UsersController.html":{}}}],["throw",{"_index":93,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["touch",{"_index":399,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":231,"title":{},"body":{"classes/User.html":{},"dependencies.html":{}}}],["true",{"_index":122,"title":{},"body":{"injectables/BasicStrategy.html":{}}}],["try",{"_index":258,"title":{},"body":{"controllers/UsersController.html":{}}}],["twitter",{"_index":405,"title":{},"body":{"index.html":{}}}],["type",{"_index":76,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BasicStrategy.html":{},"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":218,"title":{},"body":{"classes/UpdateServiceDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":361,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":85,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BasicStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["unauthorizedexception('incorrect",{"_index":100,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception('user",{"_index":95,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception(e",{"_index":300,"title":{},"body":{"injectables/UsersService.html":{}}}],["unauthorizedexception(error",{"_index":262,"title":{},"body":{"controllers/UsersController.html":{}}}],["undefined",{"_index":266,"title":{},"body":{"controllers/UsersController.html":{}}}],["unit",{"_index":376,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":291,"title":{},"body":{"injectables/UsersService.html":{}}}],["update",{"_index":161,"title":{},"body":{"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["update(@param('id",{"_index":192,"title":{},"body":{"controllers/ServicesController.html":{},"controllers/UsersController.html":{}}}],["update(id",{"_index":173,"title":{},"body":{"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updates",{"_index":213,"title":{},"body":{"injectables/ServicesService.html":{}}}],["updateservicedto",{"_index":174,"title":{"classes/UpdateServiceDto.html":{}},"body":{"controllers/ServicesController.html":{},"injectables/ServicesService.html":{},"classes/UpdateServiceDto.html":{},"coverage.html":{}}}],["useguards",{"_index":253,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(authguard('basic",{"_index":263,"title":{},"body":{"controllers/UsersController.html":{}}}],["useinterceptors",{"_index":252,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user",{"_index":86,"title":{"classes/User.html":{}},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user.password",{"_index":99,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["userexists",{"_index":69,"title":{},"body":{"injectables/AuthService.html":{}}}],["userexists(username",{"_index":78,"title":{},"body":{"injectables/AuthService.html":{}}}],["username",{"_index":80,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BasicStrategy.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users",{"_index":235,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.controller",{"_index":275,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":254,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/entities/user.entity",{"_index":87,"title":{},"body":{"injectables/AuthService.html":{}}}],["users/users.module",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["users/users.service",{"_index":64,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["userscontroller",{"_index":233,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":38,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":61,"title":{"injectables/UsersService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["validate",{"_index":104,"title":{},"body":{"injectables/BasicStrategy.html":{}}}],["validate(req",{"_index":107,"title":{},"body":{"injectables/BasicStrategy.html":{}}}],["validateuser",{"_index":70,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(username",{"_index":82,"title":{},"body":{"injectables/AuthService.html":{}}}],["variable",{"_index":322,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":418,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["watch",{"_index":371,"title":{},"body":{"index.html":{}}}],["weather/weather.module",{"_index":203,"title":{},"body":{"modules/ServicesModule.html":{}}}],["weathermodule",{"_index":199,"title":{"modules/WeatherModule.html":{}},"body":{"modules/ServicesModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["website",{"_index":403,"title":{},"body":{"index.html":{}}}],["world",{"_index":55,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":392,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ServicesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nServicesModule\n\nServicesModule\n\nAppModule -->\n\nServicesModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            ServicesModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AuthModule } from './auth/auth.module';\nimport { UsersModule } from './users/users.module';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { ServicesModule } from './services/services.module';\n\n@Module({\n  imports: [AuthModule, UsersModule, PrismaModule, ServicesModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nBasicStrategy\n\nBasicStrategy\n\nAuthModule -->\n\nBasicStrategy->AuthModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAuthModule -->\n\nPrismaService->AuthModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAuthModule -->\n\nUsersService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            BasicStrategy\n                        \n                        \n                            PrismaService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { UsersService } from '../users/users.service';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { BasicStrategy } from './auth.strategy';\n\n@Module({\n  providers: [AuthService, UsersService, PrismaService, BasicStrategy,],\n  imports: []\n\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                userExists\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        userExists\n                        \n                    \n                \n            \n            \n                \n                    \n                    userExists(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { UsersService } from '../users/users.service';\nimport { User } from '../users/entities/user.entity';\nimport * as bcrypt from 'bcrypt';\n@Injectable()\nexport class AuthService {\n    constructor(private readonly usersService: UsersService) {\n\n    }\n    async userExists(username: string): Promise {\n        return await !!this.usersService.findUserByUsername(username);\n    }\n\n    async validateUser(username: string, password: string): Promise> {\n        const user = await this.usersService.findUserByUsername(username);\n        console.log(user);\n        \n        if (!user) {    \n            throw new UnauthorizedException('User does\\'nt exists');\n        } \n        if (!bcrypt.compareSync(password, user.password)) {\n            \n            throw new UnauthorizedException('Incorrect password');\n        } else {\n            \n        }\n\n        const { password: excludedProp, ...result } = user;\n        return result;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BasicStrategy.html":{"url":"injectables/BasicStrategy.html","title":"injectable - BasicStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BasicStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(req: Request, res: Response, username, password)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.strategy.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BasicStrategy as Strategy } from 'passport-http';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class BasicStrategy extends PassportStrategy(Strategy) {\n    constructor(private readonly authService: AuthService,) {\n        super({\n            passReqToCallback: true\n        });\n    }\n\n    async validate (req :Request, res: Response, username, password): Promise {\n        \n        \n        if (this.authService.userExists) {\n            this.authService.validateUser(username, password)\n            console.log(res);\n            return true;\n        }\n        console.log(res);\n        return false;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateServiceDto.html":{"url":"classes/CreateServiceDto.html","title":"class - CreateServiceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateServiceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/dto/create-service.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateServiceDto {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IntranetModule.html":{"url":"modules/IntranetModule.html","title":"module - IntranetModule","body":"\n                   \n\n\n\n\n    Modules\n    IntranetModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/services/intranet/intranet.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\n@Module({})\nexport class IntranetModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_PrismaModule_exports\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService]\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleDestroy\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/prisma/prisma.service.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleDestroy, OnModuleInit } from '@nestjs/common';\nimport { Prisma, PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient  implements OnModuleInit, OnModuleDestroy{\n    constructor() {\n        super();\n    }\n    \n    async onModuleInit() {\n        await this.$connect();    \n    }\n    \n    async onModuleDestroy() {\n        await this.$disconnect();\n    }\n\n    \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Service.html":{"url":"classes/Service.html","title":"class - Service","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/entities/service.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Service {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ServicesController.html":{"url":"controllers/ServicesController.html","title":"controller - ServicesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ServicesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/services.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                services\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createServiceDto: CreateServiceDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/services/services.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createServiceDto\n                                    \n                                                CreateServiceDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/services/services.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/services/services.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/services/services.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateServiceDto: UpdateServiceDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/services/services.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateServiceDto\n                                    \n                                                UpdateServiceDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { ServicesService } from './services.service';\nimport { CreateServiceDto } from './dto/create-service.dto';\nimport { UpdateServiceDto } from './dto/update-service.dto';\n\n@Controller('services')\nexport class ServicesController {\n  constructor(private readonly servicesService: ServicesService) {}\n\n  @Post()\n  create(@Body() createServiceDto: CreateServiceDto) {\n    return this.servicesService.create(createServiceDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.servicesService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.servicesService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateServiceDto: UpdateServiceDto) {\n    return this.servicesService.update(+id, updateServiceDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.servicesService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServicesModule.html":{"url":"modules/ServicesModule.html","title":"module - ServicesModule","body":"\n                   \n\n\n\n\n    Modules\n    ServicesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ServicesModule\n\n\n\ncluster_ServicesModule_providers\n\n\n\ncluster_ServicesModule_imports\n\n\n\n\nIntranetModule\n\nIntranetModule\n\n\n\nServicesModule\n\nServicesModule\n\nServicesModule -->\n\nIntranetModule->ServicesModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nServicesModule -->\n\nWeatherModule->ServicesModule\n\n\n\n\n\nServicesService\n\nServicesService\n\nServicesModule -->\n\nServicesService->ServicesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/services/services.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ServicesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ServicesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IntranetModule\n                        \n                        \n                            WeatherModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ServicesService } from './services.service';\nimport { ServicesController } from './services.controller';\nimport { IntranetModule } from './intranet/intranet.module';\nimport { WeatherModule } from './weather/weather.module';\n\n@Module({\n  controllers: [ServicesController],\n  providers: [ServicesService],\n  imports: [IntranetModule, WeatherModule]\n})\nexport class ServicesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ServicesService.html":{"url":"injectables/ServicesService.html","title":"injectable - ServicesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ServicesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/services.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createServiceDto: CreateServiceDto)\n                \n            \n\n\n            \n                \n                    Defined in src/services/services.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createServiceDto\n                                    \n                                                CreateServiceDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/services/services.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/services/services.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/services/services.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateServiceDto: UpdateServiceDto)\n                \n            \n\n\n            \n                \n                    Defined in src/services/services.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateServiceDto\n                                    \n                                                UpdateServiceDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateServiceDto } from './dto/create-service.dto';\nimport { UpdateServiceDto } from './dto/update-service.dto';\n\n@Injectable()\nexport class ServicesService {\n  create(createServiceDto: CreateServiceDto) {\n    return 'This action adds a new service';\n  }\n\n  findAll() {\n    return `This action returns all services`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} service`;\n  }\n\n  update(id: number, updateServiceDto: UpdateServiceDto) {\n    return `This action updates a #${id} service`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} service`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateServiceDto.html":{"url":"classes/UpdateServiceDto.html","title":"class - UpdateServiceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateServiceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/dto/update-service.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateServiceDto } from './create-service.dto';\n\nexport class UpdateServiceDto extends PartialType(CreateServiceDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/user.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/users/entities/user.entity.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude } from \"class-transformer\";\n\nexport class User {\n    id? :number;\n    username: string;\n    created_at: Date;\n\n    @Exclude()\n    password: string;\n\n    constructor(partial: Partial) {\n        Object.assign(this, partial);\n    }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findById\n                            \n                            \n                                findByUsername\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(user: User, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByUsername\n                        \n                    \n                \n            \n            \n                \nfindByUsername(username: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/username/:username')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Req, Request, ClassSerializerInterceptor, UseInterceptors, UseGuards, UnauthorizedException } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { User } from './entities/user.entity';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post()\n  create(@Body() user: User ,@Req() req :Request) {\n\n    try {\n      return this.usersService.create(user);  \n    } catch (error) {\n      return new UnauthorizedException(error);\n    }\n    \n  }\n\n  @Get()\n  @UseGuards(AuthGuard('basic'))\n  findAll() {\n    return this.usersService.findUsers();\n  }\n\n  @Get(':id')\n  findById(@Param('id') id: number) : Promise | undefined> {\n    return  this.usersService.findUser(+id);\n  }\n\n  @Get('/username/:username')\n  @UseGuards(AuthGuard('basic'))\n  findByUsername(@Param('username') username: string) {\n    return this.usersService.findUserByUsername(username);\n  }\n\n  @Patch(':id')\n  @UseGuards(AuthGuard('basic'))\n  update(@Param('id') id: string, @Body() user: User) {\n    return this.usersService.update(+id, user);\n  }\n\n  \n  @Delete(':id')\n  @UseGuards(AuthGuard('basic'))\n  remove(@Param('id') id: string) {\n    return this.usersService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nPrismaService\n\nPrismaService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nPrismaService->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { PrismaService } from '../prisma/prisma.service';\n\n@Module({\n  controllers: [UsersController],\n  providers: [UsersService, PrismaService]\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findUser\n                            \n                            \n                                    Async\n                                findUserByUsername\n                            \n                            \n                                    Async\n                                findUsers\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: User)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findUser(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findUserByUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    findUserByUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    findUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UseInterceptors, ClassSerializerInterceptor, UnauthorizedException, NotFoundException } from '@nestjs/common';\nimport { User } from './entities/user.entity';\nimport { PrismaService } from '../prisma/prisma.service';\nimport * as bcrypt from 'bcrypt';\n\n@Injectable()\nexport class UsersService {\n  constructor(private prisma: PrismaService) { }\n\n\n  async create(createUserDto: User): Promise {\n    let user: User = createUserDto;\n    const salt = await bcrypt.genSalt();\n    user.password = await bcrypt.hash(user.password, salt);\n\n    return await this.prisma.user.create({ data: createUserDto, }).catch((e) => { throw new UnauthorizedException(e); });\n  }\n\n  async findUsers(): Promise {\n    return await this.prisma.user.findMany(\n    );\n  }\n\n  async findUser(id: number): Promise {\n\n    return await this.prisma.user.findUnique({\n      where: { id: id, },\n    }).catch((e) => {\n      throw new NotFoundException(\"User ID does'nt exist\");\n    }).then((e) => {\n      throw new NotFoundException(\"User ID does'nt exist\");\n    });\n  }\n\n  async findUserByUsername(username: string): Promise {\n\n    return await this.prisma.user.findUnique({\n      where: { username: username, },\n    }).catch((e) => {\n      throw new NotFoundException(\"User ID does'nt exist\");\n    });\n  }\n\n  async update(id: number, user: User) {\n\n    return await this.prisma.user.update({\n      where: { id: id, },\n      data: user,\n    }).catch((e) => {\n      throw new NotFoundException(\"User ID does'nt exist\");\n    });\n  }\n\n  async remove(id: number) {\n    return this.prisma.user.delete({ where: { id: id } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WeatherModule.html":{"url":"modules/WeatherModule.html","title":"module - WeatherModule","body":"\n                   \n\n\n\n\n    Modules\n    WeatherModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/services/weather/weather.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\n@Module({})\nexport class WeatherModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.strategy.ts\n            \n            injectable\n            BasicStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            module\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/services/dto/create-service.dto.ts\n            \n            class\n            CreateServiceDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/dto/update-service.dto.ts\n            \n            class\n            UpdateServiceDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/entities/service.entity.ts\n            \n            class\n            Service\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/services.controller.ts\n            \n            controller\n            ServicesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/services/services.service.ts\n            \n            injectable\n            ServicesService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/passport : ^8.0.1\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @prisma/client : ^3.6.0\n        \n            class-transformer : ^0.5.1\n        \n            passport : ^0.5.0\n        \n            passport-http : ^0.3.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IntranetModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServicesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WeatherModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_ServicesModule\n\n\n\ncluster_ServicesModule_imports\n\n\n\ncluster_ServicesModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nServicesModule\n\nServicesModule\n\nAppModule -->\n\nServicesModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nBasicStrategy\n\nBasicStrategy\n\nAuthModule -->\n\nBasicStrategy->AuthModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAuthModule -->\n\nPrismaService->AuthModule\n\n\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\nUsersModule -->\n\nPrismaService->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAuthModule -->\n\nUsersService->AuthModule\n\n\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nIntranetModule\n\nIntranetModule\n\nServicesModule -->\n\nIntranetModule->ServicesModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nServicesModule -->\n\nWeatherModule->ServicesModule\n\n\n\n\n\nServicesService\n\nServicesService\n\nServicesModule -->\n\nServicesService->ServicesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            module   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
